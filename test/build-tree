#!/usr/bin/env perl
# Build a directory tree with Nancy

use 5.10.0;
use strict;
use warnings;

use File::Basename;
use File::Find;
use File::Spec::Functions qw(catfile);

# Read and process arguments
my ($srcRoot, $template, $destRoot) = @ARGV;

# Turn a directory into a list of subdirectories, with leaf and
# non-leaf directories marked as such.
sub scanDir {
  my ($root) = @_;
  my %list = ();
  find({
    wanted => sub {
      return if !-d;
      my $pattern = "$root(?:" . catfile("", "") . ")?";
      my $name = $_ =~ s/$pattern//r;
      $list{$name} = "leaf" if !defined($list{$name});
      my $parent = dirname($name);
      $parent = "" if $parent eq ".";
      $list{$parent} = "node";
    },
    no_chdir => 1
  },
       $root);
  return \%list;
}

# Process source directories; work in sorted order so we process
# create directories in the destination tree before writing their
# contents
my $sources = scanDir($srcRoot);
foreach my $dir (sort keys %{$sources}) {
  my $dest = catfile($destRoot, $dir);
  if ($sources->{$dir} eq "leaf") { # Process a leaf directory into a page
    my @nancy_cmd = ("../nancy", "--verbose", "--root=$srcRoot", "--output=$destRoot/$dir", $template, $dir);
    #unshift @nancy_cmd, "perl", "-wMDevel::SimpleTrace";
    system(@nancy_cmd) == 0 or die "Problem building `$dir'\n";
  } else { # Make a non-leaf directory
    mkdir $dest or die "Error creating `$dir'";
  }
}

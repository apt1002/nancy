#!/bin/bash
# Tests for Nancy

set -e

# Run a test
function test() {
    local SRC=$1
    local TEMPLATE=$2
    local PAGES=$3
    local EXPECTED=$4
    rm -rf dest
    NANCY_CMD="../nancy --verbose --root $SRC $TEMPLATE"
    #NANCY_CMD="perl -wMDevel::SimpleTrace ../nancy --verbose --root $SRC $TEMPLATE"
    for page in $PAGES; do
        mkdir -p "`dirname \"dest/$page\"`"
        $NANCY_CMD $page > dest/$page || return 1
    done
    diff -Nur $EXPECTED dest || ( printf "Test in \`$SRC' failed" && return 1 )
}

# One-tree test
test webpage-src \
     "template.html" \
     "index.html people/index.html people/adam.html people/eve.html" \
     webpage-expected

# Two-tree test
rm -rf src-merged
mkdir src-merged
./mergetrees mergetrees-src:webpage-src src-merged
test src-merged \
     "template.html" \
     "index.html animals/index.html animals/adam.html animals/eve.html" \
     mergetrees-expected

# Failing executable test
rm -f false
ln -s `which false` false
( test . \
     "false.txt" \
     "dummy" \
     false-expected && \
    printf "Test succeeded unexpectedly" ) || true

# Passing executable test
rm -f true
ln -s `which true` true
test . \
     "true.txt" \
     "true" \
     true-expected

# Ensure that macros aren't expanded in Nancy's argument macros
test . \
     "path.txt" \
     '$path.txt' \
     dollar-path-expected

# Test that $paste doesn't expand macros
test paste-src \
     "paste.txt" \
     "paste" \
     paste-expected
